/*
CREATED: 7/11/2022
MODIFIED: 7/11/2022
MODEL: ORACLE 11G RELEASE 2
DATABASE: ORACLE 11G RELEASE 2
*/


-- CREATE SEQUENCES SECTION -------------------------------------------------

CREATE SEQUENCE PRO_CLIENTES_SEQ01
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 MINVALUE 0
 NOCACHE
;

CREATE SEQUENCE PRO_PELICULAS_SEQ01
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 MINVALUE 0
 NOCACHE
;

CREATE SEQUENCE PRO_SALAS_SEQ01
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 MINVALUE 0
 NOCACHE
;

CREATE SEQUENCE PRO_RESERVACION_SEQ01
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 MINVALUE 0
 NOCACHE
;

CREATE SEQUENCE PRO_TANDAS_SEQ01
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 MINVALUE 0
 NOCACHE
;

CREATE SEQUENCE PRO_ASIENTOS_SEQ01
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 MINVALUE 0
 NOCACHE
;

CREATE SEQUENCE PRO_COMIDAS_SEQ01
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 MINVALUE 0
 NOCACHE
;

CREATE SEQUENCE PRO_FACTURAS_SEQ01
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 MINVALUE 0
 NOCACHE
;

-- CREATE TABLES SECTION -------------------------------------------------

-- TABLE PRO_CLIENTES

CREATE TABLE PRO_CLIENTES(
  CLI_ID NUMBER NOT NULL,
  CLI_USUARIO VARCHAR2(20 ) NOT NULL,
  CLI_CLAVE VARCHAR2(20 ) NOT NULL,
  CLI_NOMBRE VARCHAR2(50 ) NOT NULL,
  CLI_PAPELLIDO VARCHAR2(30 ) NOT NULL,
  CLI_CORREO VARCHAR2(50 ) NOT NULL,
  CLI_IDIOMA VARCHAR2(1 ) DEFAULT 'E' NOT NULL,
  CLI_ESTADO VARCHAR2(1 ) DEFAULT 'I' NOT NULL,
  CLI_ADMIN VARCHAR2(1 ) DEFAULT 'N' NOT NULL,
  CLI_SAPELLIDO VARCHAR2(10 ),
  CLI_VERSION NUMBER DEFAULT 1 NOT NULL,
  CONSTRAINT PRO_CLIENTES_CK01 CHECK (CLI_ADMIN IN ('S','N')),
  CONSTRAINT PRO_CLIENTES_CK02 CHECK (CLI_ESTADO IN ('A', 'I'))
)
;

-- CREATE INDEXES FOR TABLE PRO_CLIENTES

CREATE UNIQUE INDEX PRO_CLIENTES_UNQ01 ON PRO_CLIENTES (CLI_USUARIO)
;

-- ADD KEYS FOR TABLE PRO_CLIENTES

ALTER TABLE PRO_CLIENTES ADD CONSTRAINT PRO_CLIENTES_PK PRIMARY KEY (CLI_ID)
;

-- TABLE AND COLUMNS COMMENTS SECTION

COMMENT ON COLUMN PRO_CLIENTES.CLI_ID IS 'ID DE LOS USUARIOS'
;
COMMENT ON COLUMN PRO_CLIENTES.CLI_USUARIO IS 'USUARIO DE LAS PERSONAS'
;
COMMENT ON COLUMN PRO_CLIENTES.CLI_CLAVE IS 'CLAVE DE LOS USUARIOS'
;
COMMENT ON COLUMN PRO_CLIENTES.CLI_NOMBRE IS 'NOMBRE DE LOS USUARIOS'
;
COMMENT ON COLUMN PRO_CLIENTES.CLI_PAPELLIDO IS 'PRIMER APELLIDO'
;
COMMENT ON COLUMN PRO_CLIENTES.CLI_CORREO IS 'CORREO DE LOS USUARIOS'
;
COMMENT ON COLUMN PRO_CLIENTES.CLI_IDIOMA IS 'IDIOMA DE LOS USUARIOS (E=ESPANOL; I=INGLES)'
;
COMMENT ON COLUMN PRO_CLIENTES.CLI_ESTADO IS 'ESTADO DEL USUARIO(A:ACTIVO, I:INACTIVO)'
;
COMMENT ON COLUMN PRO_CLIENTES.CLI_ADMIN IS 'ESTADO ADMINISTRADOR(S:SI, N:NO)'
;
COMMENT ON COLUMN PRO_CLIENTES.CLI_SAPELLIDO IS 'SEGUNDO APELLIDO'
;
COMMENT ON COLUMN PRO_CLIENTES.CLI_VERSION IS 'VERSION DEL REGISTRO DE USUARIOS'
;

-- TABLE PRO_PELICULAS

CREATE TABLE PRO_PELICULAS(
  PEL_ID NUMBER NOT NULL,
  PEL_NOMBRE VARCHAR2(30 ) NOT NULL,
  PEL_SYNOPSIS VARCHAR2(30 ),
  PEL_LINK VARCHAR2(200 ) NOT NULL,
  PEL_IMAGEN BLOB NOT NULL,
  PEL_FECHAESTRENO DATE NOT NULL,
  PEL_ESTADO VARCHAR2(1 ) DEFAULT 'S' NOT NULL,
  PEL_VERSION NUMBER DEFAULT 1 NOT NULL,
  CONSTRAINT PRO_PELICULAS_CK01 CHECK (PEL_ESTADO IN ('S','I','P'))
)
;

-- ADD KEYS FOR TABLE PRO_PELICULAS

ALTER TABLE PRO_PELICULAS ADD CONSTRAINT PRO_PELICULAS_PK PRIMARY KEY (PEL_ID)
;

-- TABLE AND COLUMNS COMMENTS SECTION

COMMENT ON COLUMN PRO_PELICULAS.PEL_ID IS 'ID DE LAS PELICULAS'
;
COMMENT ON COLUMN PRO_PELICULAS.PEL_NOMBRE IS 'NOMBRE DE LA PELICULA'
;
COMMENT ON COLUMN PRO_PELICULAS.PEL_SYNOPSIS IS 'RESEÒA DE LA PELICULA'
;
COMMENT ON COLUMN PRO_PELICULAS.PEL_LINK IS 'LINK DEL TRAILER DE LA PELICULA'
;
COMMENT ON COLUMN PRO_PELICULAS.PEL_IMAGEN IS 'IMAGEN DE LA PELICULA'
;
COMMENT ON COLUMN PRO_PELICULAS.PEL_FECHAESTRENO IS 'FECHA DE ESTRENO DE LA PELICULA'
;
COMMENT ON COLUMN PRO_PELICULAS.PEL_ESTADO IS 'ESTADO DE LA PELICULA(S:EN SALA, I:INACTIVA, P:PROXIMAMENTE)'
;

-- TABLE PRO_SALAS

CREATE TABLE PRO_SALAS(
  SAL_ID NUMBER NOT NULL,
  SAL_NOMBRE VARCHAR2(30 ) NOT NULL,
  SAL_ESTADO VARCHAR2(1 ) DEFAULT 'I' NOT NULL,
  SAL_IMGFONDO BLOB NOT NULL,
  SAL_VERSION NUMBER DEFAULT 1 NOT NULL,
  CONSTRAINT PRO_SALAS_CK01 CHECK (SAL_ESTADO IN ('A','I'))
)
;

-- ADD KEYS FOR TABLE PRO_SALAS

ALTER TABLE PRO_SALAS ADD CONSTRAINT PRO_SALAS_PK PRIMARY KEY (SAL_ID)
;

-- TABLE AND COLUMNS COMMENTS SECTION

COMMENT ON COLUMN PRO_SALAS.SAL_ID IS 'ID DE LA SALA'
;
COMMENT ON COLUMN PRO_SALAS.SAL_NOMBRE IS 'NOMBRE O NUMERO DE LA SALA'
;
COMMENT ON COLUMN PRO_SALAS.SAL_ESTADO IS 'ESTADO DE LA SALA (ACTIVA=A; INACTIVA=I)'
;
COMMENT ON COLUMN PRO_SALAS.SAL_IMGFONDO IS 'IMAGEN DEL FONDO DE LA SALA'
;
COMMENT ON COLUMN PRO_SALAS.SAL_VERSION IS 'VERSION DEL REGISTRO DE LAS SALAS'
;

-- TABLE PRO_ASIENTOS

CREATE TABLE PRO_ASIENTOS(
  ASI_ID NUMBER NOT NULL,
  ASI_IMG BLOB NOT NULL,
  ASI_NOMBRE VARCHAR2(4 ) NOT NULL,
  ASI_CANTIDAD NUMBER NOT NULL,
  ASI_VERSION NUMBER DEFAULT 1 NOT NULL,
  SAL_ID NUMBER
)
;

-- CREATE INDEXES FOR TABLE PRO_ASIENTOS

CREATE INDEX PRO_SALASASIENTOS_FK01 ON PRO_ASIENTOS (SAL_ID)
;

-- ADD KEYS FOR TABLE PRO_ASIENTOS

ALTER TABLE PRO_ASIENTOS ADD CONSTRAINT PRO_ASIENTOS_PK PRIMARY KEY (ASI_ID)
;

-- TABLE AND COLUMNS COMMENTS SECTION

COMMENT ON COLUMN PRO_ASIENTOS.ASI_ID IS 'IDENTIFICADOR DE LOS ASIENTOS POR SALA'
;
COMMENT ON COLUMN PRO_ASIENTOS.ASI_IMG IS 'IMAGEN DEL ASIENTO'
;
COMMENT ON COLUMN PRO_ASIENTOS.ASI_NOMBRE IS 'NOMBRE ASIENTOS (E.G. A1, B5, C10)'
;
COMMENT ON COLUMN PRO_ASIENTOS.ASI_CANTIDAD IS 'CANTIDAD DE ASIENTOS'
;
COMMENT ON COLUMN PRO_ASIENTOS.ASI_VERSION IS 'VERSION DEL REGISTRO DE ASIENTOS'
;

-- TABLE PRO_RESERVACION

CREATE TABLE PRO_RESERVACION(
  RES_ID NUMBER NOT NULL,
  RES_FECHA DATE NOT NULL,
  RES_TOTAL NUMBER NOT NULL,
  RES_VERSION NUMBER DEFAULT 1 NOT NULL,
  CLI_ID NUMBER
)
;

-- CREATE INDEXES FOR TABLE PRO_RESERVACION

CREATE INDEX PRO_CLIENTESRESERVACION_FK01 ON PRO_RESERVACION (CLI_ID)
;

-- ADD KEYS FOR TABLE PRO_RESERVACION

ALTER TABLE PRO_RESERVACION ADD CONSTRAINT PRO_RESERVACION_PK PRIMARY KEY (RES_ID)
;

-- TABLE AND COLUMNS COMMENTS SECTION

COMMENT ON COLUMN PRO_RESERVACION.RES_ID IS 'IDENTIFICADOR'
;
COMMENT ON COLUMN PRO_RESERVACION.RES_FECHA IS 'FECHA DE LA RESERVACION'
;
COMMENT ON COLUMN PRO_RESERVACION.RES_VERSION IS 'VERSION DEL REGISTRO DE RESERVACION'
;

-- TABLE PRO_TANDAS

CREATE TABLE PRO_TANDAS(
  TAN_ID NUMBER NOT NULL,
  TAN_NOMBRE VARCHAR2(50 ) NOT NULL,
  TAN_HORAINICIO VARCHAR2(6 ) NOT NULL,
  TAN_HORAFINAL VARCHAR2(6 ) NOT NULL,
  TAN_FECHA DATE NOT NULL,
  TAN_PRECIO NUMBER NOT NULL,
  TAN_VERSION NUMBER DEFAULT 1 NOT NULL,
  PEL_ID NUMBER,
  RES_ID NUMBER
)
;

-- CREATE INDEXES FOR TABLE PRO_TANDAS

CREATE INDEX PRO_RESERVACIONTANDAS_FK01 ON PRO_TANDAS (RES_ID)
;

CREATE INDEX PRO_PELICULASTANDAS_FK01 ON PRO_TANDAS (PEL_ID)
;

-- ADD KEYS FOR TABLE PRO_TANDAS

ALTER TABLE PRO_TANDAS ADD CONSTRAINT PRO_TANDAS_PK PRIMARY KEY (TAN_ID)
;

-- TABLE AND COLUMNS COMMENTS SECTION

COMMENT ON COLUMN PRO_TANDAS.TAN_ID IS 'IDENTIFICADOR DE TABLA TANDAS'
;
COMMENT ON COLUMN PRO_TANDAS.TAN_NOMBRE IS 'NOMBRE DE LA TANDA CON SALA Y PELICULA'
;
COMMENT ON COLUMN PRO_TANDAS.TAN_HORAINICIO IS 'HORA DE INICIO DE LA TANDA'
;
COMMENT ON COLUMN PRO_TANDAS.TAN_HORAFINAL IS 'HORA FIN DE LA TANDA'
;
COMMENT ON COLUMN PRO_TANDAS.TAN_FECHA IS 'FECHA DE LA TANDA'
;
COMMENT ON COLUMN PRO_TANDAS.TAN_PRECIO IS 'PRECIO DE LA TANDA'
;
COMMENT ON COLUMN PRO_TANDAS.TAN_VERSION IS 'VERSION DE LA TABLA'
;

-- TABLE PRO_COMIDAS

CREATE TABLE PRO_COMIDAS(
  COM_ID NUMBER NOT NULL,
  COM_NOMBRE VARCHAR2(30 ) NOT NULL,
  COM_PRECIO NUMBER NOT NULL,
  COM_DESCRIPCION VARCHAR2(30 ),
  COM_VERSION NUMBER DEFAULT 1 NOT NULL
)
;

-- ADD KEYS FOR TABLE PRO_COMIDAS

ALTER TABLE PRO_COMIDAS ADD CONSTRAINT PRO_COMIDAS_PK PRIMARY KEY (COM_ID)
;

-- TABLE AND COLUMNS COMMENTS SECTION

COMMENT ON COLUMN PRO_COMIDAS.COM_ID IS 'ID DE LAS COMIDAS'
;
COMMENT ON COLUMN PRO_COMIDAS.COM_NOMBRE IS 'NOMBRE DE LA COMIDA O BEBIDA'
;
COMMENT ON COLUMN PRO_COMIDAS.COM_PRECIO IS 'PRECIO DE LA COMIDA O BEBIDA'
;
COMMENT ON COLUMN PRO_COMIDAS.COM_DESCRIPCION IS 'DESCRIPCION DE LA COMIDA O LA BEBIDA'
;
COMMENT ON COLUMN PRO_COMIDAS.COM_VERSION IS 'VERSION DEL REGISTRO'
;

-- TABLE PRO_FACTURAS

CREATE TABLE PRO_FACTURAS(
  FAC_ID NUMBER NOT NULL,
  FAC_TOTAL NUMBER NOT NULL,
  FAC_VERSION NUMBER DEFAULT 1 NOT NULL,
  FAC_FECHA DATE NOT NULL,
  CLI_ID NUMBER
)
;

-- CREATE INDEXES FOR TABLE PRO_FACTURAS

CREATE INDEX PRO_CLIENTESFACTURAS ON PRO_FACTURAS (CLI_ID)
;

-- ADD KEYS FOR TABLE PRO_FACTURAS

ALTER TABLE PRO_FACTURAS ADD CONSTRAINT PRO_FACTURAS_PK PRIMARY KEY (FAC_ID)
;

-- TABLE PRO_TANDASASIENTOS

CREATE TABLE PRO_TANDASASIENTOS(
  TAN_ID NUMBER NOT NULL,
  ASI_ID NUMBER NOT NULL
)
;

-- ADD KEYS FOR TABLE PRO_TANDASASIENTOS

ALTER TABLE PRO_TANDASASIENTOS ADD CONSTRAINT PK_PRO_TANDASASIENTOS PRIMARY KEY (TAN_ID,ASI_ID)
;

-- TABLE PRO_SALASPELICULAS

CREATE TABLE PRO_SALASPELICULAS(
  PEL_ID NUMBER NOT NULL,
  SAL_ID NUMBER NOT NULL
)
;

-- ADD KEYS FOR TABLE PRO_SALASPELICULAS

ALTER TABLE PRO_SALASPELICULAS ADD CONSTRAINT PK_PRO_SALASPELICULAS PRIMARY KEY (PEL_ID,SAL_ID)
;

-- TABLE PRO_FACTURASCOMIDAS

CREATE TABLE PRO_FACTURASCOMIDAS(
  FAC_ID NUMBER NOT NULL,
  COM_ID NUMBER NOT NULL
)
;

-- ADD KEYS FOR TABLE PRO_FACTURASCOMIDAS

ALTER TABLE PRO_FACTURASCOMIDAS ADD CONSTRAINT PK_PRO_FACTURASCOMIDAS PRIMARY KEY (FAC_ID,COM_ID)
;

-- TRIGGER FOR SEQUENCE PRO_CLIENTES_SEQ01 FOR COLUMN CLI_ID IN TABLE PRO_CLIENTES ---------
CREATE OR REPLACE TRIGGER PRO_CLIENTES_TGR01 BEFORE INSERT
ON PRO_CLIENTES FOR EACH ROW
BEGIN
  if:new.cli_id is null or :new.cli_id <=0 then 
	:new.cli_id := PRO_CLIENTES_SEQ01.nextval;
  end if;
END;
/
CREATE OR REPLACE TRIGGER PRO_CLIENTES_TGR02 AFTER UPDATE OF CLI_ID
ON PRO_CLIENTES FOR EACH ROW
BEGIN
  RAISE_APPLICATION_ERROR(-20010,'CANNOT UPDATE COLUMN CLI_ID IN TABLE PRO_CLIENTES AS IT USES SEQUENCE.');
END;
/

-- TRIGGER FOR SEQUENCE PRO_FACTURAS_SEQ01 FOR COLUMN FAC_ID IN TABLE PRO_FACTURAS ---------
CREATE OR REPLACE TRIGGER PRO_FACTURAS_TGR01 BEFORE INSERT
ON PRO_FACTURAS FOR EACH ROW
BEGIN
  if:new.FAC_ID is null or :new.FAC_ID <=0 then 
	:new.FAC_ID := PRO_FACTURAS_SEQ01.nextval;
  end if;
END;
/
CREATE OR REPLACE TRIGGER PRO_FACTURAS_TGR02 AFTER UPDATE OF FAC_ID
ON PRO_FACTURAS FOR EACH ROW
BEGIN
  RAISE_APPLICATION_ERROR(-20010,'CANNOT UPDATE COLUMN FAC_ID IN TABLE PRO_FACTURAS AS IT USES SEQUENCE.');
END;
/

-- TRIGGER FOR SEQUENCE PRO_COMIDAS_SEQ01 FOR COLUMN COM_ID IN TABLE PRO_COMIDAS ---------
CREATE OR REPLACE TRIGGER PRO_COMIDAS_TGR01 BEFORE INSERT
ON PRO_COMIDAS FOR EACH ROW
BEGIN
  if:new.COM_ID is null or :new.COM_ID <=0 then 
	:new.COM_ID := PRO_COMIDAS_SEQ01.nextval;
  end if;
END;
/
CREATE OR REPLACE TRIGGER PRO_COMIDAS_TGR02 AFTER UPDATE OF COM_ID
ON PRO_COMIDAS FOR EACH ROW
BEGIN
  RAISE_APPLICATION_ERROR(-20010,'CANNOT UPDATE COLUMN COM_ID IN TABLE PRO_COMIDAS AS IT USES SEQUENCE.');
END;
/

-- TRIGGER FOR SEQUENCE PRO_RESERVACION_SEQ01 FOR COLUMN RES_ID IN TABLE PRO_RESERVACION ---------
CREATE OR REPLACE TRIGGER PRO_RESERVACION_TGR01 BEFORE INSERT
ON PRO_RESERVACION FOR EACH ROW
BEGIN
  if:new.RES_ID is null or :new.RES_ID <=0 then 
	:new.RES_ID := PRO_RESERVACION_SEQ01.nextval;
  end if;
END;
/
CREATE OR REPLACE TRIGGER PRO_RESERVACION_TGR02 AFTER UPDATE OF RES_ID
ON PRO_RESERVACION FOR EACH ROW
BEGIN
  RAISE_APPLICATION_ERROR(-20010,'CANNOT UPDATE COLUMN RES_ID IN TABLE PRO_RESERVACION AS IT USES SEQUENCE.');
END;
/

-- TRIGGER FOR SEQUENCE PRO_TANDAS_SEQ01 FOR COLUMN TAN_ID IN TABLE PRO_TANDAS ---------
CREATE OR REPLACE TRIGGER PRO_TANDAS_TGR01 BEFORE INSERT
ON PRO_TANDAS FOR EACH ROW
BEGIN
  if:new.TAN_ID is null or :new.TAN_ID <=0 then 
	:new.TAN_ID := PRO_TANDAS_SEQ01.nextval;
  end if;
END;
/
CREATE OR REPLACE TRIGGER PRO_TANDAS_TGR02 AFTER UPDATE OF TAN_ID
ON PRO_TANDAS FOR EACH ROW
BEGIN
  RAISE_APPLICATION_ERROR(-20010,'CANNOT UPDATE COLUMN TAN_ID IN TABLE PRO_TANDAS AS IT USES SEQUENCE.');
END;
/

-- TRIGGER FOR SEQUENCE PRO_ASIENTOS_SEQ01 FOR COLUMN ASI_ID IN TABLE PRO_ASIENTOS ---------
CREATE OR REPLACE TRIGGER PRO_ASIENTOS_TGR01 BEFORE INSERT
ON PRO_ASIENTOS FOR EACH ROW
BEGIN
  if:new.ASI_ID is null or :new.ASI_ID <=0 then 
	:new.ASI_ID := PRO_ASIENTOS_SEQ01.nextval;
  end if;
END;
/
CREATE OR REPLACE TRIGGER PRO_ASIENTOS_TGR02 AFTER UPDATE OF ASI_ID
ON PRO_ASIENTOS FOR EACH ROW
BEGIN
  RAISE_APPLICATION_ERROR(-20010,'CANNOT UPDATE COLUMN ASI_ID IN TABLE PRO_ASIENTOS AS IT USES SEQUENCE.');
END;
/

-- TRIGGER FOR SEQUENCE PRO_PELICULAS_SEQ01 FOR COLUMN PEL_ID IN TABLE PRO_PELICULAS ---------
CREATE OR REPLACE TRIGGER PRO_PELICULAS_TGR01 BEFORE INSERT
ON PRO_PELICULAS FOR EACH ROW
BEGIN
  if:new.PEL_ID is null or :new.PEL_ID <=0 then 
	:new.PEL_ID := PRO_PELICULAS_SEQ01.nextval;
  end if;
END;
/
CREATE OR REPLACE TRIGGER PRO_PELICULAS_TGR02 AFTER UPDATE OF PEL_ID
ON PRO_PELICULAS FOR EACH ROW
BEGIN
  RAISE_APPLICATION_ERROR(-20010,'CANNOT UPDATE COLUMN PEL_ID IN TABLE PRO_PELICULAS AS IT USES SEQUENCE.');
END;
/

-- TRIGGER FOR SEQUENCE PRO_SALAS_SEQ01 FOR COLUMN SAL_ID IN TABLE PRO_SALAS ---------
CREATE OR REPLACE TRIGGER PRO_SALAS_TGR01 BEFORE INSERT
ON PRO_SALAS FOR EACH ROW
BEGIN
  if:new.SAL_ID is null or :new.SAL_ID <=0 then 
	:new.SAL_ID := PRO_SALAS_SEQ01.nextval;
  end if;
END;
/
CREATE OR REPLACE TRIGGER PRO_SALAS_TGR02 AFTER UPDATE OF SAL_ID
ON PRO_SALAS FOR EACH ROW
BEGIN
  RAISE_APPLICATION_ERROR(-20010,'CANNOT UPDATE COLUMN SAL_ID IN TABLE PRO_SALAS AS IT USES SEQUENCE.');
END;
/


-- CREATE FOREIGN KEYS (RELATIONSHIPS) SECTION ------------------------------------------------- 

ALTER TABLE PRO_RESERVACION ADD CONSTRAINT PRO_CLIENTESRESERVACION_FK01 FOREIGN KEY (CLI_ID) REFERENCES PRO_CLIENTES (CLI_ID)
;


ALTER TABLE PRO_TANDAS ADD CONSTRAINT PRO_RESERVACIONTANDAS_FK01 FOREIGN KEY (RES_ID) REFERENCES PRO_RESERVACION (RES_ID)
;


ALTER TABLE PRO_TANDASASIENTOS ADD CONSTRAINT PRO_TANDASASIENTOS_FK02 FOREIGN KEY (TAN_ID) REFERENCES PRO_TANDAS (TAN_ID)
;


ALTER TABLE PRO_TANDASASIENTOS ADD CONSTRAINT PRO_TANDASASIENTOS_FK01 FOREIGN KEY (ASI_ID) REFERENCES PRO_ASIENTOS (ASI_ID)
;


ALTER TABLE PRO_ASIENTOS ADD CONSTRAINT PRO_SALASASIENTOS_FK01 FOREIGN KEY (SAL_ID) REFERENCES PRO_SALAS (SAL_ID)
;


ALTER TABLE PRO_SALASPELICULAS ADD CONSTRAINT PRO_SALASPELICULAS_FK02 FOREIGN KEY (PEL_ID) REFERENCES PRO_PELICULAS (PEL_ID)
;


ALTER TABLE PRO_SALASPELICULAS ADD CONSTRAINT PRO_SALASPELICULAS_FK01 FOREIGN KEY (SAL_ID) REFERENCES PRO_SALAS (SAL_ID)
;


ALTER TABLE PRO_TANDAS ADD CONSTRAINT PRO_PELICULASTANDAS_FK01 FOREIGN KEY (PEL_ID) REFERENCES PRO_PELICULAS (PEL_ID)
;


ALTER TABLE PRO_FACTURAS ADD CONSTRAINT PRO_CLIENTESFACTURAS_FK01 FOREIGN KEY (CLI_ID) REFERENCES PRO_CLIENTES (CLI_ID)
;


ALTER TABLE PRO_FACTURASCOMIDAS ADD CONSTRAINT PRO_FACTURASCOMIDAS_FK01 FOREIGN KEY (FAC_ID) REFERENCES PRO_FACTURAS (FAC_ID)
;


ALTER TABLE PRO_FACTURASCOMIDAS ADD CONSTRAINT PRO_FACTURASCOMIDAS_FK02 FOREIGN KEY (COM_ID) REFERENCES PRO_COMIDAS (COM_ID)
;





